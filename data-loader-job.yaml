---
# Jobs reference https://kubernetes.io/docs/concepts/jobs/run-to-completion-finite-workloads/
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-data-loader-with-timeout
spec:
  activeDeadlineSeconds: 100
  template:
    metadata:
      name: mysql-data-loader
    spec:
      containers:
      - name: mysql-data-loader
        image: captainshar/php-dbconnect
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: password
          - name: MYSQL_HOST
            value: mysql.default.svc.cluster.local
        #update to execute my bash script instead
        # data loader bash script:
        #1. Wait for MySQL to be reachable
        #2. Check to see if data is already installed
        #3. Download data from internet
        #4. Load it up
        #5. Return success (exit code 0)
        #Error/time out perhaps
        #URL to download data is a parameter/env variable?
        command: ["/tmp/mysql-sakila-data-loader.sh"]
      # if running /tmp/mysql-sakila-data-loader.sh returns a non-zero exit status
      # the Job will be considered a failure, and this Job will run again
      # restartPolicy: OnFailure ensures this Job will keep attempting to load our data
      # until it completes successfully
      # so if this Job tries to run before the PHP server is up, or before the MySQL server is up
      # or before the Secret is created, this Job will keep trying to complete
      # the mysql-sakila-data-loader.sh script itself has "set -o errexit"
      # so if any commands the script itself launches fail, the whole script returns nonzero
      restartPolicy: OnFailure